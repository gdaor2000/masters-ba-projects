{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2489-2021 Data Curation T1 Final Exam \n",
    "\n",
    "The final exam will contain 1 question with subquestions. \n",
    "\n",
    "## Lemon or Peach? (60 points)\n",
    "\n",
    "For those who have taken ECON 101, you should already be quite familar with the term **lemon car** that refers to a car found to be defective only after it has been bought. In 1970, economist George Akerlof published a paper \"The Market for Lemons: Quality Uncertainty and the Market Mechanism\" that explored how the quality of goods traded in a market can degrade in the presence of *information asymmetry* between buyers and sellers. This leads to the **adverse selection** problem that  sellers will sell only when they hold \"lemons\" and they will leave the market when they hold \"peaches\". As such, Adverse selection is a market mechanism that can lead to a market collapse. In 2001, Akerlof, along with Michael Spence, and Joseph Stiglitz, jointly received the Nobel Memorial Prize in Economic Sciences, for their research on issues related to asymmetric information.\n",
    "\n",
    "![lemoncar](https://blog.drivetime.com/wp-content/uploads/2014/06/lemon-car.png)\n",
    "\n",
    "Online information system creates platform for buyers and sellers to trade their goods with information about the goods. However, lemon problem becomes even worse as buyers have no way to verify and examine the goods (such as used cars) and have to rely on information posted by the sellers. \n",
    "\n",
    "In order to address this problem, large-scale historical purchase data would allow online retailers to alleviate the issue. For example, OLX group is a global online marketplace operating in 45 countries. The OLX marketplace is a platform for buying and selling services and goods such as electronics, fashion items, furniture, household goods, Properties, cars and bikes. Their business model is to charge sellers listing fees when they post the advertisement. Their business objective is to facilitate transactions on the platform such that buyers would be willing to repeately purchase quality goods with reasonable price and sellers would be willing to list more goods for profits. \n",
    "\n",
    "As the analyst, you are given the task **to examine the information about listings of used cars on OLX Portugal that a car is considered to be sold or not if the days of listing is within the 30 days.** Otherwise, the seller has to pay extra to relist the advertisement until it is sold or withdrawn. \n",
    "\n",
    "\n",
    "\n",
    "**OLX Car Dataset (olx_car_dataset.csv)**\n",
    "All car listings are contained in the file olx_car_dataset.csv. Each line of this file after the header row represents one listing of car on the OLX platform, and has the following format:\n",
    "**`'ID', 'region_id', 'private_business', 'price', 'make', 'model', 'fuel_type', 'mileage', 'reg_year', 'eng_capacity', 'color', 'capacity', 'dayslive'`**\n",
    "\n",
    "The columns are quite self-explained. `dayslive` is the days of the listing on the OLX until the card is sold or withdrawn. \n",
    "\n",
    "\n",
    "Answer the following questions using the provided dataset. You can write down intermediate results towards the final answers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 1 (15 points) \n",
    "\n",
    "The dataset can store up to 10,000 car listings and therefore in total contains 3 parts. \n",
    "\n",
    "Meanwhile, each part of the data contains a few errors that need to be resolved:\n",
    "\n",
    "- the ```price``` column of part1 is mistakenly encoded as ```prices``` \n",
    "- the ```region_id``` column of part 1 is all in the wrong sign, e.g. the region_id of 11 is wrongly encoded as -11\n",
    "- the ```private_business``` column of part2 is mistakenly encoded as ```private```\n",
    "- the ```mileage``` column of part2 is miscalculated by taking a logarithm of its original value\n",
    "- the ```capacity``` column of part3 is wrongly set as missing value when the capacity is 5\n",
    "- the ```model``` column of part3 is wrongly encoded with also the ```make``` columns, e.g. BMW 320 should have BMW in the column ```make``` and 320 in the column ```model```.\n",
    "\n",
    "Read the datasets and concatenate them all into one dataset and show how many car listings are in the entire dataset?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26370"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "one = pd.read_csv(\"cars_dataset_part1.csv\")\n",
    "one[\"prices\"] = one.rename(columns = {'prices':'price'}, inplace = True)\n",
    "one['region_id'] = one.loc[one['region_id']<0, 'region_id'] * -1\n",
    "two = pd.read_csv(\"cars_dataset_part2.csv\")\n",
    "two[\"private\"] = two.rename(columns={\"private\":\"private_business\"}, inplace = True)\n",
    "two[\"mileage\"] = two.loc[two[\"mileage\"] > 0, \"mileage\"]*10\n",
    "three = pd.read_csv(\"cars_dataset_part3.csv\")\n",
    "three['capacity'] = three['capacity'].fillna(5, inplace = True)\n",
    "three['model'] = three.model.str.split('-', expand = True)\n",
    "\n",
    "df = pd.concat([one,two,three], ignore_index=True)\n",
    "len(df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 2 (5 points) \n",
    "Show the average price of all diesel cars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17820.627270439607"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[df[\"fuel_type\"]==\"diesel\"].price.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 3 (5 points)\n",
    "\n",
    "Show the median mileage of all eletric vehicles from region 13:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26000.0"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[df[\"fuel_type\"]==\"electric\"].loc[df[\"region_id\"]==13].mileage.median()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 4 (5 points)\n",
    "\n",
    "Show the top 5 most popular car make listed by private owners and registered since 2017: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "renault\n",
      "mercedes-benz\n",
      "fiat\n",
      "peugeot\n",
      "vw\n"
     ]
    }
   ],
   "source": [
    "a = df.loc[df[\"private_business\"]==\"private\"].loc[df[\"reg_year\"]>=2017].groupby(\"make\").count().sort_values(\"ID\", ascending=False).head(5).index.tolist()\n",
    "\n",
    "for x in a:\n",
    "    print(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 5 (5 points)\n",
    "\n",
    "Show the difference of average price of diesel cars with mileage larger than 100,000 kms and smaller than 5,000 kms. What do you find? How about gaz cars? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13261.110774920155\n",
      "18301.466620258016\n",
      "6513.2082362082365\n",
      "13819.065573770491\n"
     ]
    }
   ],
   "source": [
    "more = df.loc[df[\"fuel_type\"]==\"diesel\"].loc[df[\"mileage\"]>100000].price.mean()\n",
    "\n",
    "less = df.loc[df[\"fuel_type\"]==\"diesel\"].loc[df[\"mileage\"]<5000].price.mean()\n",
    "\n",
    "print(more)\n",
    "print(less)\n",
    "\n",
    "#The average price for diesel cars with higher mileage is cheaper\n",
    "\n",
    "gaz_more = df.loc[df[\"fuel_type\"]==\"gaz\"].loc[df[\"mileage\"]>100000].price.mean()\n",
    "\n",
    "less = df.loc[df[\"fuel_type\"]==\"gaz\"].loc[df[\"mileage\"]<5000].price.mean()\n",
    "\n",
    "print(gaz_more)\n",
    "print(less)\n",
    "\n",
    "#The average price for gaz cars with higher mileage is a lot cheaper"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 6 (5 points)\n",
    "\n",
    "For cars with the most popular color, how many of them are sold by business sellers in region 11 and with capacity of 5 passengers?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Unnamed: 0.1</th>\n",
       "      <th>ID</th>\n",
       "      <th>region_id</th>\n",
       "      <th>private_business</th>\n",
       "      <th>price</th>\n",
       "      <th>make</th>\n",
       "      <th>model</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>mileage</th>\n",
       "      <th>reg_year</th>\n",
       "      <th>eng_capacity</th>\n",
       "      <th>capacity</th>\n",
       "      <th>dayslive</th>\n",
       "      <th>prices</th>\n",
       "      <th>private</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>color</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>other</th>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>1969</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>white</th>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1575</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>1581</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>blue</th>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>1098</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>red</th>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>296</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>297</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>green</th>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>170</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>brown</th>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>golden</th>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>orange</th>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beige</th>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>purple</th>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yellow</th>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0  Unnamed: 0.1    ID  region_id  private_business  price  \\\n",
       "color                                                                        \n",
       "other         1969          1969  1969       1969              1969   1969   \n",
       "white         1581          1581  1581       1581              1581   1581   \n",
       "blue          1098          1098  1098       1098              1098   1098   \n",
       "red            297           297   297        297               297    297   \n",
       "green          170           170   170        170               170    170   \n",
       "brown           84            84    84         84                84     84   \n",
       "golden          58            58    58         58                58     58   \n",
       "orange          43            43    43         43                43     43   \n",
       "beige           37            37    37         37                37     37   \n",
       "purple          13            13    13         13                13     13   \n",
       "yellow          12            12    12         12                12     12   \n",
       "\n",
       "        make  model  fuel_type  mileage  reg_year  eng_capacity  capacity  \\\n",
       "color                                                                       \n",
       "other   1969   1969       1969     1969      1969          1969      1969   \n",
       "white   1581   1581       1581     1575      1581          1581      1581   \n",
       "blue    1098   1098       1098     1098      1098          1098      1098   \n",
       "red      297    297        297      296       297           297       297   \n",
       "green    170    170        170      170       170           170       170   \n",
       "brown     84     84         84       84        84            84        84   \n",
       "golden    58     58         58       58        58            58        58   \n",
       "orange    43     43         43       43        43            43        43   \n",
       "beige     37     37         37       37        37            37        37   \n",
       "purple    13     13         13       13        13            13        13   \n",
       "yellow    12     12         12       12        12            12        12   \n",
       "\n",
       "        dayslive  prices  private  \n",
       "color                              \n",
       "other       1969       0        0  \n",
       "white       1581       0        0  \n",
       "blue        1098       0        0  \n",
       "red          297       0        0  \n",
       "green        170       0        0  \n",
       "brown         84       0        0  \n",
       "golden        58       0        0  \n",
       "orange        43       0        0  \n",
       "beige         37       0        0  \n",
       "purple        13       0        0  \n",
       "yellow        12       0        0  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = df.loc[df[\"private_business\"]==\"business\"].loc[df[\"region_id\"]==11].loc[df[\"capacity\"]==5].groupby('color').count().sort_values(\"private_business\", ascending=False)\n",
    "\n",
    "a"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 7 (5 points)\n",
    "\n",
    "Which model is listed the most expensive? On average, how many days does this model stay on the listing?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "model\n",
      "07-Aug    29990.0\n",
      "09-Mar    15999.0\n",
      "09-May     3250.0\n",
      "10         3000.0\n",
      "100        5000.0\n",
      "           ...   \n",
      "zafira    29450.0\n",
      "zoe       19500.0\n",
      "zr         2750.0\n",
      "zt         5450.0\n",
      "zx          950.0\n",
      "Name: price, Length: 922, dtype: float64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "8.0"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "expensive_model = df.groupby(\"model\").price.max()\n",
    "print(expensive_model)\n",
    "\n",
    "df.loc[df[\"model\"]==\"07-Aug\"].dayslive.mean()\n",
    "\n",
    "# instead of 07-Aug put in the model found out in the first part"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Qustion 8 (5 points)\n",
    "\n",
    "For cars listed in region of 11 and 13, can you identify the top 5 model and make of cars that have the highest sales (i.e. the listing days smaller or less than 30 days)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Unnamed: 0.1</th>\n",
       "      <th>ID</th>\n",
       "      <th>region_id</th>\n",
       "      <th>private_business</th>\n",
       "      <th>price</th>\n",
       "      <th>make</th>\n",
       "      <th>model</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>mileage</th>\n",
       "      <th>reg_year</th>\n",
       "      <th>eng_capacity</th>\n",
       "      <th>color</th>\n",
       "      <th>capacity</th>\n",
       "      <th>dayslive</th>\n",
       "      <th>prices</th>\n",
       "      <th>private</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7220</th>\n",
       "      <td>7220</td>\n",
       "      <td>7220</td>\n",
       "      <td>7e1bf99bb3b107869f536cb4ae1128d8c21668e5</td>\n",
       "      <td>11.0</td>\n",
       "      <td>business</td>\n",
       "      <td>9750.0</td>\n",
       "      <td>mercedes-benz</td>\n",
       "      <td>c-270</td>\n",
       "      <td>diesel</td>\n",
       "      <td>270000.000000</td>\n",
       "      <td>2004</td>\n",
       "      <td>2700</td>\n",
       "      <td>blue</td>\n",
       "      <td>5</td>\n",
       "      <td>29</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24537</th>\n",
       "      <td>24537</td>\n",
       "      <td>24537</td>\n",
       "      <td>62fb00a0be791e83f6b41a6ff748d95048e71cb3</td>\n",
       "      <td>11.0</td>\n",
       "      <td>business</td>\n",
       "      <td>19200.0</td>\n",
       "      <td>renault</td>\n",
       "      <td>renault</td>\n",
       "      <td>diesel</td>\n",
       "      <td>55982.000000</td>\n",
       "      <td>2017</td>\n",
       "      <td>1461</td>\n",
       "      <td>other</td>\n",
       "      <td>None</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18235</th>\n",
       "      <td>18235</td>\n",
       "      <td>18235</td>\n",
       "      <td>c2488d3389e2eca0485778ef2a58ee653e40d8d1</td>\n",
       "      <td>13.0</td>\n",
       "      <td>business</td>\n",
       "      <td>37890.0</td>\n",
       "      <td>bmw</td>\n",
       "      <td>730</td>\n",
       "      <td>diesel</td>\n",
       "      <td>117.035458</td>\n",
       "      <td>2013</td>\n",
       "      <td>2993</td>\n",
       "      <td>blue</td>\n",
       "      <td>5</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18227</th>\n",
       "      <td>18227</td>\n",
       "      <td>18227</td>\n",
       "      <td>afd2dfc7a9d8c2ea2e280c6e56ae91d770984c1c</td>\n",
       "      <td>13.0</td>\n",
       "      <td>business</td>\n",
       "      <td>16500.0</td>\n",
       "      <td>bmw</td>\n",
       "      <td>320</td>\n",
       "      <td>diesel</td>\n",
       "      <td>122.010601</td>\n",
       "      <td>2010</td>\n",
       "      <td>2000</td>\n",
       "      <td>white</td>\n",
       "      <td>5</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18218</th>\n",
       "      <td>18218</td>\n",
       "      <td>18218</td>\n",
       "      <td>af305dbcb3080be120794be956aba0bfb172b5e0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>business</td>\n",
       "      <td>7980.0</td>\n",
       "      <td>mercedes-benz</td>\n",
       "      <td>a-180</td>\n",
       "      <td>diesel</td>\n",
       "      <td>120.257491</td>\n",
       "      <td>2007</td>\n",
       "      <td>2000</td>\n",
       "      <td>blue</td>\n",
       "      <td>5</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2302</th>\n",
       "      <td>2302</td>\n",
       "      <td>2302</td>\n",
       "      <td>8b35a3ca8f3f3efe0f70859370fcf9cb3497108d</td>\n",
       "      <td>13.0</td>\n",
       "      <td>business</td>\n",
       "      <td>2750.0</td>\n",
       "      <td>mg</td>\n",
       "      <td>zr</td>\n",
       "      <td>gaz</td>\n",
       "      <td>120000.000000</td>\n",
       "      <td>2003</td>\n",
       "      <td>1400</td>\n",
       "      <td>blue</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8186</th>\n",
       "      <td>8186</td>\n",
       "      <td>8186</td>\n",
       "      <td>f5ba288ac7aa903887c009dbea613cc2ea0d3a81</td>\n",
       "      <td>11.0</td>\n",
       "      <td>business</td>\n",
       "      <td>10490.0</td>\n",
       "      <td>volvo</td>\n",
       "      <td>c30</td>\n",
       "      <td>diesel</td>\n",
       "      <td>57133.000000</td>\n",
       "      <td>2008</td>\n",
       "      <td>1560</td>\n",
       "      <td>red</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19629</th>\n",
       "      <td>19629</td>\n",
       "      <td>19629</td>\n",
       "      <td>a97a3af65ea8f5b9a2284da035eb226c8542c58f</td>\n",
       "      <td>11.0</td>\n",
       "      <td>private</td>\n",
       "      <td>4350.0</td>\n",
       "      <td>opel</td>\n",
       "      <td>vectra-caravan</td>\n",
       "      <td>diesel</td>\n",
       "      <td>122.922503</td>\n",
       "      <td>2005</td>\n",
       "      <td>1900</td>\n",
       "      <td>blue</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7687</th>\n",
       "      <td>7687</td>\n",
       "      <td>7687</td>\n",
       "      <td>507fda0498bf7d97a78223a24111d2a5c7851034</td>\n",
       "      <td>11.0</td>\n",
       "      <td>private</td>\n",
       "      <td>4400.0</td>\n",
       "      <td>suzuki</td>\n",
       "      <td>swift</td>\n",
       "      <td>gaz</td>\n",
       "      <td>102000.000000</td>\n",
       "      <td>2007</td>\n",
       "      <td>1328</td>\n",
       "      <td>blue</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26369</th>\n",
       "      <td>26369</td>\n",
       "      <td>26369</td>\n",
       "      <td>4abdc6f15830ab771161712270ed2c0528365451</td>\n",
       "      <td>11.0</td>\n",
       "      <td>business</td>\n",
       "      <td>3750.0</td>\n",
       "      <td>lancia</td>\n",
       "      <td>lancia</td>\n",
       "      <td>diesel</td>\n",
       "      <td>200000.000000</td>\n",
       "      <td>2004</td>\n",
       "      <td>2200</td>\n",
       "      <td>golden</td>\n",
       "      <td>None</td>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1956 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Unnamed: 0  Unnamed: 0.1                                        ID  \\\n",
       "7220         7220          7220  7e1bf99bb3b107869f536cb4ae1128d8c21668e5   \n",
       "24537       24537         24537  62fb00a0be791e83f6b41a6ff748d95048e71cb3   \n",
       "18235       18235         18235  c2488d3389e2eca0485778ef2a58ee653e40d8d1   \n",
       "18227       18227         18227  afd2dfc7a9d8c2ea2e280c6e56ae91d770984c1c   \n",
       "18218       18218         18218  af305dbcb3080be120794be956aba0bfb172b5e0   \n",
       "...           ...           ...                                       ...   \n",
       "2302         2302          2302  8b35a3ca8f3f3efe0f70859370fcf9cb3497108d   \n",
       "8186         8186          8186  f5ba288ac7aa903887c009dbea613cc2ea0d3a81   \n",
       "19629       19629         19629  a97a3af65ea8f5b9a2284da035eb226c8542c58f   \n",
       "7687         7687          7687  507fda0498bf7d97a78223a24111d2a5c7851034   \n",
       "26369       26369         26369  4abdc6f15830ab771161712270ed2c0528365451   \n",
       "\n",
       "       region_id private_business    price           make           model  \\\n",
       "7220        11.0         business   9750.0  mercedes-benz           c-270   \n",
       "24537       11.0         business  19200.0        renault         renault   \n",
       "18235       13.0         business  37890.0            bmw             730   \n",
       "18227       13.0         business  16500.0            bmw             320   \n",
       "18218       11.0         business   7980.0  mercedes-benz           a-180   \n",
       "...          ...              ...      ...            ...             ...   \n",
       "2302        13.0         business   2750.0             mg              zr   \n",
       "8186        11.0         business  10490.0          volvo             c30   \n",
       "19629       11.0          private   4350.0           opel  vectra-caravan   \n",
       "7687        11.0          private   4400.0         suzuki           swift   \n",
       "26369       11.0         business   3750.0         lancia          lancia   \n",
       "\n",
       "      fuel_type        mileage  reg_year  eng_capacity   color capacity  \\\n",
       "7220     diesel  270000.000000      2004          2700    blue        5   \n",
       "24537    diesel   55982.000000      2017          1461   other     None   \n",
       "18235    diesel     117.035458      2013          2993    blue        5   \n",
       "18227    diesel     122.010601      2010          2000   white        5   \n",
       "18218    diesel     120.257491      2007          2000    blue        5   \n",
       "...         ...            ...       ...           ...     ...      ...   \n",
       "2302        gaz  120000.000000      2003          1400    blue        5   \n",
       "8186     diesel   57133.000000      2008          1560     red        4   \n",
       "19629    diesel     122.922503      2005          1900    blue        5   \n",
       "7687        gaz  102000.000000      2007          1328    blue        5   \n",
       "26369    diesel  200000.000000      2004          2200  golden     None   \n",
       "\n",
       "       dayslive prices private  \n",
       "7220         29   None     NaN  \n",
       "24537        29    NaN     NaN  \n",
       "18235        29    NaN    None  \n",
       "18227        29    NaN    None  \n",
       "18218        29    NaN    None  \n",
       "...         ...    ...     ...  \n",
       "2302          7   None     NaN  \n",
       "8186          7   None     NaN  \n",
       "19629         7    NaN    None  \n",
       "7687          7   None     NaN  \n",
       "26369         7    NaN     NaN  \n",
       "\n",
       "[1956 rows x 17 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "liste = (11, 13)\n",
    "\n",
    "df.loc[df['region_id'].isin(liste)].loc[df[\"dayslive\"]<30].sort_values(\"dayslive\", ascending=False).groupby([\"model\",\"make\"]).head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Qustion 9 (5 points)\n",
    "\n",
    "Show the correlation between mileage, reg_year, eng_capacity and price. What do you observe? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mileage</th>\n",
       "      <th>reg_year</th>\n",
       "      <th>eng_capacity</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mileage</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.408825</td>\n",
       "      <td>0.108614</td>\n",
       "      <td>-0.091477</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>reg_year</th>\n",
       "      <td>-0.408825</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.138543</td>\n",
       "      <td>0.148113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>eng_capacity</th>\n",
       "      <td>0.108614</td>\n",
       "      <td>-0.138543</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.083119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price</th>\n",
       "      <td>-0.091477</td>\n",
       "      <td>0.148113</td>\n",
       "      <td>0.083119</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               mileage  reg_year  eng_capacity     price\n",
       "mileage       1.000000 -0.408825      0.108614 -0.091477\n",
       "reg_year     -0.408825  1.000000     -0.138543  0.148113\n",
       "eng_capacity  0.108614 -0.138543      1.000000  0.083119\n",
       "price        -0.091477  0.148113      0.083119  1.000000"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[:,[\"mileage\", \"reg_year\", \"eng_capacity\", \"price\"]].corr()\n",
    "\n",
    "# There is no significant correlation between any of these values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Qustion 10 (5 points)\n",
    "\n",
    "Show the pivot table of mean and standard deviation for car prices  across the type of sellers and region (as the row), and fuel_types (as the column). If there are no available cars in each category, set the value to be 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"6\" halign=\"left\">price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>diesel</th>\n",
       "      <th>electric</th>\n",
       "      <th>gaz</th>\n",
       "      <th>gpl</th>\n",
       "      <th>hibride-diesel</th>\n",
       "      <th>hibride-gaz</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>private_business</th>\n",
       "      <th>region_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"22\" valign=\"top\">business</th>\n",
       "      <th>0.0</th>\n",
       "      <td>20826.304641</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>17489.668831</td>\n",
       "      <td>38000.000000</td>\n",
       "      <td>18700.000000</td>\n",
       "      <td>3.382500e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>17659.665763</td>\n",
       "      <td>28034.750000</td>\n",
       "      <td>12164.144295</td>\n",
       "      <td>5125.000000</td>\n",
       "      <td>20035.285714</td>\n",
       "      <td>2.928680e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2.0</th>\n",
       "      <td>24987.500000</td>\n",
       "      <td>16950.000000</td>\n",
       "      <td>16037.942857</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3.0</th>\n",
       "      <td>17054.836252</td>\n",
       "      <td>24118.307692</td>\n",
       "      <td>13246.293160</td>\n",
       "      <td>4187.800000</td>\n",
       "      <td>26172.090909</td>\n",
       "      <td>4.288685e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4.0</th>\n",
       "      <td>15020.583333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>19621.666667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14500.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5.0</th>\n",
       "      <td>24728.804348</td>\n",
       "      <td>33575.000000</td>\n",
       "      <td>12428.095238</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>54000.000000</td>\n",
       "      <td>2.682312e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6.0</th>\n",
       "      <td>18595.707763</td>\n",
       "      <td>19320.000000</td>\n",
       "      <td>13625.443038</td>\n",
       "      <td>9500.000000</td>\n",
       "      <td>17616.333333</td>\n",
       "      <td>4.390833e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7.0</th>\n",
       "      <td>17822.631579</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9900.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>32680.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8.0</th>\n",
       "      <td>22474.551237</td>\n",
       "      <td>31950.000000</td>\n",
       "      <td>15271.347368</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>21675.000000</td>\n",
       "      <td>3.585273e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.0</th>\n",
       "      <td>27856.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10.0</th>\n",
       "      <td>19602.729730</td>\n",
       "      <td>23289.285714</td>\n",
       "      <td>17122.114504</td>\n",
       "      <td>8900.000000</td>\n",
       "      <td>20297.142857</td>\n",
       "      <td>1.619980e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11.0</th>\n",
       "      <td>18440.020091</td>\n",
       "      <td>19183.413793</td>\n",
       "      <td>13468.685528</td>\n",
       "      <td>6352.136364</td>\n",
       "      <td>21276.123077</td>\n",
       "      <td>3.336085e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12.0</th>\n",
       "      <td>15072.225000</td>\n",
       "      <td>24900.000000</td>\n",
       "      <td>11503.928571</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13.0</th>\n",
       "      <td>17258.326041</td>\n",
       "      <td>25189.560000</td>\n",
       "      <td>12750.645135</td>\n",
       "      <td>11903.470588</td>\n",
       "      <td>22259.460317</td>\n",
       "      <td>3.197656e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14.0</th>\n",
       "      <td>16216.750973</td>\n",
       "      <td>10680.000000</td>\n",
       "      <td>12402.887097</td>\n",
       "      <td>2200.000000</td>\n",
       "      <td>34725.000000</td>\n",
       "      <td>3.720000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15.0</th>\n",
       "      <td>18784.863805</td>\n",
       "      <td>21962.105263</td>\n",
       "      <td>12417.971888</td>\n",
       "      <td>10102.142857</td>\n",
       "      <td>27574.494615</td>\n",
       "      <td>4.785614e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16.0</th>\n",
       "      <td>19764.510638</td>\n",
       "      <td>49161.666667</td>\n",
       "      <td>34334.769231</td>\n",
       "      <td>4750.000000</td>\n",
       "      <td>32490.000000</td>\n",
       "      <td>4.076560e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17.0</th>\n",
       "      <td>16378.260870</td>\n",
       "      <td>14000.000000</td>\n",
       "      <td>7924.955556</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>21184.750000</td>\n",
       "      <td>3.678000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18.0</th>\n",
       "      <td>17762.067308</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11877.653846</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>22796.666667</td>\n",
       "      <td>4.016633e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>119000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.526125e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7273.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"22\" valign=\"top\">private</th>\n",
       "      <th>1.0</th>\n",
       "      <td>16333.716049</td>\n",
       "      <td>13990.000000</td>\n",
       "      <td>14112.826087</td>\n",
       "      <td>14800.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2.0</th>\n",
       "      <td>19075.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1987.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3.0</th>\n",
       "      <td>13907.708333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>16013.857143</td>\n",
       "      <td>4500.000000</td>\n",
       "      <td>18130.000000</td>\n",
       "      <td>1.865000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4.0</th>\n",
       "      <td>16686.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>12500.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5.0</th>\n",
       "      <td>18248.300000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1900.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6.0</th>\n",
       "      <td>11859.190476</td>\n",
       "      <td>14500.000000</td>\n",
       "      <td>9293.529412</td>\n",
       "      <td>3250.000000</td>\n",
       "      <td>20500.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7.0</th>\n",
       "      <td>10563.888889</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4800.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8.0</th>\n",
       "      <td>13855.876712</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14301.444444</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.150000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.0</th>\n",
       "      <td>10628.571429</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1775.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10.0</th>\n",
       "      <td>10361.903226</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>13668.181818</td>\n",
       "      <td>7775.000000</td>\n",
       "      <td>21875.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11.0</th>\n",
       "      <td>12569.756493</td>\n",
       "      <td>19917.900000</td>\n",
       "      <td>8645.751337</td>\n",
       "      <td>7562.500000</td>\n",
       "      <td>20267.500000</td>\n",
       "      <td>2.313990e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12.0</th>\n",
       "      <td>8375.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>13125.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.400000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13.0</th>\n",
       "      <td>14074.290123</td>\n",
       "      <td>30950.000000</td>\n",
       "      <td>8100.049296</td>\n",
       "      <td>5584.285714</td>\n",
       "      <td>20847.272727</td>\n",
       "      <td>1.756250e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14.0</th>\n",
       "      <td>12263.021739</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6063.176471</td>\n",
       "      <td>12000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.500000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15.0</th>\n",
       "      <td>11583.450262</td>\n",
       "      <td>14830.000000</td>\n",
       "      <td>8547.394737</td>\n",
       "      <td>11000.000000</td>\n",
       "      <td>21450.000000</td>\n",
       "      <td>2.754950e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16.0</th>\n",
       "      <td>13704.157895</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9033.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17.0</th>\n",
       "      <td>13794.900000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9250.000000</td>\n",
       "      <td>6900.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18.0</th>\n",
       "      <td>14283.178571</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7292.500000</td>\n",
       "      <td>2990.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31.0</th>\n",
       "      <td>33316.666667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>12483.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42.0</th>\n",
       "      <td>12583.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7500.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43.0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>24331.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45.0</th>\n",
       "      <td>22000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   price                               \\\n",
       "fuel_type                         diesel      electric            gaz   \n",
       "private_business region_id                                              \n",
       "business         0.0        20826.304641      0.000000   17489.668831   \n",
       "                 1.0        17659.665763  28034.750000   12164.144295   \n",
       "                 2.0        24987.500000  16950.000000   16037.942857   \n",
       "                 3.0        17054.836252  24118.307692   13246.293160   \n",
       "                 4.0        15020.583333      0.000000   19621.666667   \n",
       "                 5.0        24728.804348  33575.000000   12428.095238   \n",
       "                 6.0        18595.707763  19320.000000   13625.443038   \n",
       "                 7.0        17822.631579      0.000000    9900.000000   \n",
       "                 8.0        22474.551237  31950.000000   15271.347368   \n",
       "                 9.0        27856.000000      0.000000       0.000000   \n",
       "                 10.0       19602.729730  23289.285714   17122.114504   \n",
       "                 11.0       18440.020091  19183.413793   13468.685528   \n",
       "                 12.0       15072.225000  24900.000000   11503.928571   \n",
       "                 13.0       17258.326041  25189.560000   12750.645135   \n",
       "                 14.0       16216.750973  10680.000000   12402.887097   \n",
       "                 15.0       18784.863805  21962.105263   12417.971888   \n",
       "                 16.0       19764.510638  49161.666667   34334.769231   \n",
       "                 17.0       16378.260870  14000.000000    7924.955556   \n",
       "                 18.0       17762.067308      0.000000   11877.653846   \n",
       "                 31.0           0.000000      0.000000  119000.000000   \n",
       "                 43.0           0.000000      0.000000       0.000000   \n",
       "                 54.0           0.000000      0.000000    7273.000000   \n",
       "private          1.0        16333.716049  13990.000000   14112.826087   \n",
       "                 2.0        19075.000000      0.000000    1987.500000   \n",
       "                 3.0        13907.708333      0.000000   16013.857143   \n",
       "                 4.0        16686.000000      0.000000   12500.000000   \n",
       "                 5.0        18248.300000      0.000000    1900.000000   \n",
       "                 6.0        11859.190476  14500.000000    9293.529412   \n",
       "                 7.0        10563.888889      0.000000    4800.000000   \n",
       "                 8.0        13855.876712      0.000000   14301.444444   \n",
       "                 9.0        10628.571429      0.000000    1775.000000   \n",
       "                 10.0       10361.903226      0.000000   13668.181818   \n",
       "                 11.0       12569.756493  19917.900000    8645.751337   \n",
       "                 12.0        8375.000000      0.000000   13125.000000   \n",
       "                 13.0       14074.290123  30950.000000    8100.049296   \n",
       "                 14.0       12263.021739      0.000000    6063.176471   \n",
       "                 15.0       11583.450262  14830.000000    8547.394737   \n",
       "                 16.0       13704.157895      0.000000    9033.333333   \n",
       "                 17.0       13794.900000      0.000000    9250.000000   \n",
       "                 18.0       14283.178571      0.000000    7292.500000   \n",
       "                 31.0       33316.666667      0.000000   12483.333333   \n",
       "                 42.0       12583.333333      0.000000    7500.000000   \n",
       "                 43.0           0.000000      0.000000   24331.000000   \n",
       "                 45.0       22000.000000      0.000000       0.000000   \n",
       "\n",
       "                                                                       \n",
       "fuel_type                            gpl hibride-diesel   hibride-gaz  \n",
       "private_business region_id                                             \n",
       "business         0.0        38000.000000   18700.000000  3.382500e+04  \n",
       "                 1.0         5125.000000   20035.285714  2.928680e+04  \n",
       "                 2.0            0.000000       0.000000  0.000000e+00  \n",
       "                 3.0         4187.800000   26172.090909  4.288685e+04  \n",
       "                 4.0            0.000000   14500.000000  0.000000e+00  \n",
       "                 5.0            0.000000   54000.000000  2.682312e+04  \n",
       "                 6.0         9500.000000   17616.333333  4.390833e+04  \n",
       "                 7.0            0.000000   32680.000000  0.000000e+00  \n",
       "                 8.0            0.000000   21675.000000  3.585273e+04  \n",
       "                 9.0            0.000000       0.000000  0.000000e+00  \n",
       "                 10.0        8900.000000   20297.142857  1.619980e+05  \n",
       "                 11.0        6352.136364   21276.123077  3.336085e+04  \n",
       "                 12.0           0.000000       0.000000  0.000000e+00  \n",
       "                 13.0       11903.470588   22259.460317  3.197656e+04  \n",
       "                 14.0        2200.000000   34725.000000  3.720000e+04  \n",
       "                 15.0       10102.142857   27574.494615  4.785614e+04  \n",
       "                 16.0        4750.000000   32490.000000  4.076560e+04  \n",
       "                 17.0           0.000000   21184.750000  3.678000e+04  \n",
       "                 18.0           0.000000   22796.666667  4.016633e+04  \n",
       "                 31.0           0.000000       0.000000  0.000000e+00  \n",
       "                 43.0           0.000000       0.000000  5.526125e+06  \n",
       "                 54.0           0.000000       0.000000  0.000000e+00  \n",
       "private          1.0        14800.000000       0.000000  0.000000e+00  \n",
       "                 2.0            0.000000       0.000000  0.000000e+00  \n",
       "                 3.0         4500.000000   18130.000000  1.865000e+04  \n",
       "                 4.0            0.000000       0.000000  0.000000e+00  \n",
       "                 5.0         1000.000000       0.000000  0.000000e+00  \n",
       "                 6.0         3250.000000   20500.000000  0.000000e+00  \n",
       "                 7.0            0.000000       0.000000  0.000000e+00  \n",
       "                 8.0            0.000000       0.000000  1.150000e+04  \n",
       "                 9.0            0.000000       0.000000  0.000000e+00  \n",
       "                 10.0        7775.000000   21875.000000  0.000000e+00  \n",
       "                 11.0        7562.500000   20267.500000  2.313990e+04  \n",
       "                 12.0           0.000000       0.000000  2.400000e+04  \n",
       "                 13.0        5584.285714   20847.272727  1.756250e+04  \n",
       "                 14.0       12000.000000       0.000000  4.500000e+04  \n",
       "                 15.0       11000.000000   21450.000000  2.754950e+04  \n",
       "                 16.0           0.000000       0.000000  0.000000e+00  \n",
       "                 17.0        6900.000000       0.000000  0.000000e+00  \n",
       "                 18.0        2990.000000       0.000000  0.000000e+00  \n",
       "                 31.0           0.000000       0.000000  0.000000e+00  \n",
       "                 42.0           0.000000       0.000000  0.000000e+00  \n",
       "                 43.0           0.000000       0.000000  0.000000e+00  \n",
       "                 45.0           0.000000       0.000000  0.000000e+00  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "index = df.loc[:,[\"private_business\", \"region_id\"]]\n",
    "\n",
    "column = df.loc[:, [\"fuel_type\"]]\n",
    "\n",
    "vals = df.loc[:, [\"fuel_type\", \"private_business\", \"region_id\", \"price\"]]\n",
    "\n",
    "pd.pivot_table(vals, index=index, columns=column, fill_value=0)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
